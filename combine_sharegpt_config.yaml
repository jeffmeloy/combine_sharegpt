embedding:
  tokenizer_name: "bert-base-uncased"  # Tokenizer to use for text processing
  max_length: 8192  # Maximum number of tokens to process in a single pass
  embedding_model_path: ".//model//"  # Local or HuggingFace path to the embedding model directory
  embedding_model_name: "nomic-embed-text-v1.5"  # Name of the embedding model to use
  trust_remote_code: true  # Whether to trust remote code when loading the model
  safe_serialization: true  # Use safe serialization when loading the model
  rotary_scaling_factor: 2  # Scaling factor for rotary embeddings
  local_files_only: true  # Load model files from the local file system only
  initial_batch_size: 2000  # Initial batch size for embedding computation
  memory_fraction: 0.7  # Fraction of device memory to use for batching

filtering:
  max_output_size: 64000  # Maximum number of output records after filtering and preprocessing
  dedup: true  # Deduplicate the input data using embeddings before processing
  norm: true  # Normalize the distribution of the combined data set length
  similarity_threshold: 0.95  # Threshold for similarity to consider pairs as duplicates (0-1)
  F1: "cosine"  # First filtering method
  F2: "kl"  # Second filtering method
  filter_batch_size: 1000 # pytorch cosine similiarity batch size 
  force_num_bins: null  # Set to an integer to override automatic bin selection

input:
  directory: "./"  # Directory containing input sharegpt.json files

output:
  directory: "./"  # Directory to save output files
  train_output_file: "train_sharegpt"  # Base name for train output files
  test_output_file: "test_sharegpt"  # Base name for test output files
  save_json: true  # Save output in JSON format
  save_jsonl: true  # Save output in JSONL format

logging:
  level: "INFO"  # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"  # Log message format 

preprocessing:
  system_prompt: "Master input meaning and intent to synthesize clear, coherent, and relevant responses."
  gpt_strip_out:  # List of phrases to strip out from GPT responses
    - "Ah, "
    - "Sure."
    - "Sure!"
    - "Great!"
    - "Hello!"
    - "Of course!"
    - "Certainly!"
    - "Absolutely!"
    - "Happy coding!"
    - "The answer is "
    - "The answer is: "
    - "Youâ€™re welcome!"
    - "Great question!"
    - "Hope this helps!"
    - "Cognitive biases!"
    - "I hope that helps"
    - "I'm happy to help!"
    - "I hope this helps!"
    - "Sure, I can do that."
    - "Interesting question!"
    - "Interesting questions!"
    - "What a great question!"
    - "I'm glad to hear that!"
    - "What a fascinating task!"
    - "Great, I'm happy to help!"
    - "Sure, I'd be happy to help!"
    - "I hope these examples help!"
    - "Here's a descriptive answer:"
    - "Good luck, and happy coding!"
    - "Let me know if you need that."
    - "Yes, I can help you with that."
    - "I apologize for the confusion."
    - "I hope this information helps!"
    - "The answer to this equation is "
    - "Sure, I can help you with that."
    - "The answer to this expression is "
    - "I hope this helps clarify things!"
    - "Really hope that will be helpful."
    - "I hope this answers your question."
    - "Please let me know your preference."
    - "I hope this information was helpful!"
    - "Sure, I can help you with that task."
    - "Sure, I'd be happy to help with that!"
    - "Sure, I'd be happy to help with that."
    - "Let me know if you have any questions."
    - "Let me know if you need any more help."
    - "Let me know if you have any questions!"
    - "Let me know if you need any more help!"
    - "Please let me know if that's the case."
    - "Let me know if you need further assistance!"
    - "If you have any questions, feel free to ask!"
    - "Let me know if you have any other questions."
    - "Please let me know if you need further help."
    - "Please let me know if you need anything else."
    - "Please let me know if you have any questions."
    - "Let me know if you have any further questions."
    - "I apologize if my previous response was unclear"
    - "Let me know if you need help with anything else!"
    - "Please let me know if you have any other queries."
    - "Please let me know if you have any other concerns."
    - "Do let me know if you need help with anything else."
    - "Please let me know if you have any other questions!"
    - " and let me know if you need help with anything else"
    - "Please let me know if you have any further questions."
    - "Please let me know if you have any further questions!"
    - "Please let me know if there is anything else you need."
    - "Please, let me know if you need help with anything else."
    - "Let me know if you have any other questions about Python."
    - "Let me know if there's anything else I can assist you with."
    - "Please let me know if there's more assistance I can provide!"
    - "Let me know if you have any questions or need further assistance."
    - "Let me know if you have any questions or need further clarification."
    - "Let me know if you have any questions, or if you need additional help."
    - "Please let me know if there's any part of it you want me to expand on."
    - "Let me know if you have any questions or if you'd like to start working on this project."
    - "Let me know if you have any more questions or if you'd like to practice with more examples."
    - "Let me know if you have any other questions or if there's anything else I can assist you with."
    - "Let me know if you have any other questions or if you'd like me to assist you with anything else."
    - "Please let me know if this doesn't meet your requirements and I'll adjust the program accordingly."
    - "Please let me know if you have any further questions or if there's anything more I can help you with."
  
  rejection_phrases:  # List of phrases in the gpt response that cause a conversation to be rejected
    - "AI"
    - "language model"
    - "openai"
    - "I am sorry"
    - "I'm sorry"
    - "I apologize"
    - "I cannot"
    - "I can't"
    - "I will not"